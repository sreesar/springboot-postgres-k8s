name: spring boot
on: [push, pull_request]
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build and test
      run: mvn clean package -DskipTests=true 
    
    - name: create a Docker Image
      run: |
        docker build . --file Dockerfile --tag spring
        docker image
        
   
    - name: push image to ECR
      uses: vitr/actions-build-and-upload-to-ecs@master
      with:
         access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         account_id: ${{ secrets.AWS_ACCOUNT_ID }}
         repo: demoapplication
         region: us-west-2
         tags: latest,${{ github.sha }}
         create_repo: true
             
    - name: Install AWS CLI
      run: |
       curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv1.zip"
       unzip awscliv1.zip
       sudo ./aws/install --update
       aws --version
       
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-west-2
   
       
    - name: Install and configure kubectl
      run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(<kubectl.sha256) kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client
          
    - name: get config file
      run: |
        pwd
        cd home/runner/
        ls -al
          
          
    - name:  cluster config
      uses: statsig-io/kubectl-via-eksctl@main
      env:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: us-west-2
        cluster: springboot
      with:
           args: rollout restart deployment/willanyoneeverreadthis
           
  #  - name: deploy to cluster
   #   uses: kodermax/kubectl-aws-eks@master
    #  env:
     #   KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
     #   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
     #   ECR_REPOSITORY: demoapplication
     #   IMAGE_TAG: ${{ github.sha }}
     # with:
     #   args: set image deployment/$ECR_REPOSITORY $ECR_REPOSITORY=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Set kubeconfig data
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_SPRING}}
      run: kubectl get nodes
         
   #      kubectl --kubeconfig kubeconfig.yml cluster-info dump
         
   
